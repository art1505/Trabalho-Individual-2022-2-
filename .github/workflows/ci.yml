name: Arthur

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt
    - name: Install poetry
      run: |
        pip install poetry
    - name: pytest
      run: |
        pip install pytest
        export PYTHONPATH=src
  
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Checking Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'        

    - name: Testing with Pytest
      run: |
        python3 -m pip install --upgrade pip
        pip install pytest
        pip install pytest-cov
        pytest ./tests
      continue-on-error: true
      
    - name: Clean code using Lint with flake8
      run: |
        python3 -m pip install --upgrade pip
        pip install flake8 pytest-cov
        pip install flake8
        flake8 ./src
      continue-on-error: true
        
  authomatization:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
        
    - name: Install dependencies 
      run: |
        pip install sphinx
        pip install sphinx-rtd-theme
        pip install breathe
        sudo apt install doxygen
    - name: Generate Documentation
      working-directory: ./sphinxdocs
      run: make html

  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: Update toml
      run: |
        version=$(date +%Y%m%d%H%M%S)
        sed -i "s/^version.*/version = \"$version\"/" pyproject.toml
      
    - name: Upgrade pip
      run: |
         pip install --upgrade pip
         pip install pytest --upgrade pytest
 
          
    - name: poetry install
      run: curl -sSL https://install.python-poetry.org | python3 - --git https://github.com/python-poetry/poetry.git@master

    - name: Config poetry
      run: poetry config http-basic.pypi ${{ secrets.PYPI_TOKEN_USERNAME }} ${{ secrets.PYPI_TOKEN_PASSWORD }}

    - name: Build and Publish
      run: |
        poetry build
        poetry publish